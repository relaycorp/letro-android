package tech.relaycorp.letro.messages.storage.entity

import androidx.room.Entity
import androidx.room.Index
import androidx.room.PrimaryKey
import java.util.UUID

const val TABLE_NAME_CONVERSATIONS = "conversations"

@Entity(
    tableName = TABLE_NAME_CONVERSATIONS,
    indices = [Index("conversationId", unique = true)],
)
/**
 * @param keyId - primary key for the conversations table. Autogenerated.
 * @param conversationId - Unique ID of a conversation
 * @param ownerVeraId - ID of the account, which this conversation belongs (for display this conversation only for a particular account)
 * @param contactVeraId - ID of the contact
 * @param isRead - whether this conversation was read or not
 * @param subject - the subject of the conversation
 * @param isArchived - whether this conversation was archived or not
 */
data class Conversation(
    @PrimaryKey(autoGenerate = true)
    val keyId: Long = 0L,
    val conversationId: UUID = UUID.randomUUID(),
    val ownerVeraId: String,
    val contactVeraId: String,
    val isRead: Boolean,
    val subject: String? = null,
    val isArchived: Boolean = false,
)
